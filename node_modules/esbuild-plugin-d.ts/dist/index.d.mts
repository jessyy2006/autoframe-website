import { BuildOptions, Plugin } from 'esbuild';
import ts from 'typescript';
import { TsConfigJson } from 'type-fest';

interface DTSPluginOpts {
    outDir?: string;
    tsconfig?: string | TsConfigJson;
    buildInfoDir?: string;
    experimentalBundling?: boolean;
    __buildContext?: any;
}

declare function getCompilerOptions(opts: {
    tsconfig: any;
    pluginOptions: DTSPluginOpts;
    esbuildOptions: BuildOptions;
    willBundleDeclarations: boolean;
}): ts.CompilerOptions;

declare function resolveTSConfig(opts: {
    configPath?: string;
    configName?: string;
    searchPath?: string;
}): {
    config: any;
    configPath: string;
};

declare function humanizeFileSize(size: number): string;

declare const dtsPlugin: (opts?: DTSPluginOpts) => Plugin;

export { type DTSPluginOpts, dtsPlugin as default, dtsPlugin, getCompilerOptions, humanizeFileSize, resolveTSConfig };
